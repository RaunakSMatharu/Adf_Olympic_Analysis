{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "devadfraunak"
		},
		"Pub_AzureDataLakeStorage_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Pub_AzureDataLakeStorage_gen2'"
		},
		"Snowflake_Source_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Snowflake_Source'"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://devkeyvaultraunaks.vault.azure.net"
		},
		"Pub_AzureDataLakeStorage_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devpubgen2raunak.dfs.core.windows.net/"
		},
		"Source_AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcegen2raunak.dfs.core.windows.net/"
		},
		"Source_RestService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://countryapi.io/api/all"
		},
		"devrawgen2storage_link_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devrawgen2raunak.dfs.core.windows.net/"
		},
		"raw_blob_linked_service_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'raw_blob_linked_service'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/send_email_notification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-06.eastus.logic.azure.com:443/workflows/1a9ae4a0fcae4b479f5945fe0c391079/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=O7w542u6hlEJXKLCxBLKsh91wn555zgTlE2jZXrmhHs",
							"body": {
								"value": "{\n    \"Status\": \"@{pipeline().parameters.Status}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\",\n    \"ExecutionTime\":\"@{pipeline().TriggerTime}\",\n    \"PipelineTriggerName\":\"@{pipeline().TriggerName}\",\n    \"OrgiPipelineName\":\"@{pipeline().parameters.File_name}\",\n    \"PipelineRunBy\":\"@{pipeline().parameters.PipelineRunBy}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Status": {
						"type": "string"
					},
					"File_name": {
						"type": "string"
					},
					"PipelineRunBy": {
						"type": "string"
					}
				},
				"variables": {
					"date_folder": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-28T04:05:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pub_AzureDataLakeStorage_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Pub_AzureDataLakeStorage_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Pub_AzureDataLakeStorage_gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeSelf')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pub_Parquet_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Pub_AzureDataLakeStorage_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Pub_folder_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Pub_folder_name",
							"type": "Expression"
						},
						"fileSystem": "olymicdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Pub_AzureDataLakeStorage_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_Source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"authenticationType": "Basic",
					"connectionString": "[parameters('Snowflake_Source_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeSelf",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeSelf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Source_AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "source-gen2-key"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimeSelf",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeSelf')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_RestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Source_RestService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"APIKey": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "AzureKeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": "src-rest-api-key"
						}
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimeSelf",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeSelf')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/devrawgen2storage_link')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('devrawgen2storage_link_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "devrawgen2-key"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_blob_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('raw_blob_linked_service_sasUri')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeSelf",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeSelf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Raw_Parquet_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "devrawgen2storage_link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string",
						"defaultValue": "data_0_0_0.parquet"
					},
					"date_part": {
						"type": "string",
						"defaultValue": "Date_Part=2024-04-24"
					},
					"source_file_name": {
						"type": "string",
						"defaultValue": "Snowflake"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().source_file_name,'/',dataset().date_part)",
							"type": "Expression"
						},
						"fileSystem": "olympicdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/devrawgen2storage_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Raw_csv_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "devrawgen2storage_link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					},
					"date_part": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Dataset/',dataset().date_part)",
							"type": "Expression"
						},
						"fileSystem": "olympicdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/devrawgen2storage_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SInk_Json_gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "devrawgen2storage_link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "contries.json",
						"folderPath": {
							"value": "@concat('Rest_API/Date_Part=',formatDateTime(utcnow(),'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": "olympicdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/devrawgen2storage_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Binary_gen2_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "devrawgen2storage_link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Dataset",
						"fileSystem": "olympicdata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/devrawgen2storage_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Parquet_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "devrawgen2storage_link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('Snowflake/Date_Part=',formatDateTime(utcnow(),'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": "olympicdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/devrawgen2storage_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Raw_Snowflake_Transform_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "devrawgen2storage_link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Snowflake",
						"fileSystem": "olympicdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "TEAMNAME",
						"type": "UTF8"
					},
					{
						"name": "DISCIPLINE",
						"type": "UTF8"
					},
					{
						"name": "COUNTRY",
						"type": "UTF8"
					},
					{
						"name": "EVENT",
						"type": "UTF8"
					},
					{
						"name": "Date_Part",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/devrawgen2storage_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_rawBinary_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "devrawgen2storage_link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Dataset",
						"fileSystem": "olympicdata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/devrawgen2storage_link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Binary_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Source_AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "olympicsdata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Source_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Rest_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Source_RestService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relative_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relative_url",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Source_RestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Snowflake_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_Source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "DATABASE_NAME",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DATABASE_OWNER",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "IS_TRANSIENT",
						"type": "VARCHAR",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "COMMENT",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CREATED",
						"type": "TIMESTAMP_LTZ",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_ALTERED",
						"type": "TIMESTAMP_LTZ",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RETENTION_TIME",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "TYPE",
						"type": "VARCHAR",
						"precision": 19,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "OLY",
					"table": "TEAMS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_Source')]"
			]
		}
	]
}